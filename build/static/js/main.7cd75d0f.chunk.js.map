{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/contacts.js","App.js","index.js"],"names":["Persons","_ref","persons","deleteFunction","react_default","a","createElement","Fragment","map","person","key","name","number","onClick","window","confirm","concat","id","removeConfirmation","Filter","value","changeFunction","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Notification","message","className","baseUrl","contacts","axios","get","newObject","post","put","delete","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","filter","setFilter","_useState9","_useState10","setMessage","_useState11","_useState12","messageType","setMessageType","useEffect","contactService","then","response","data","personsToShow","toLowerCase","includes","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","personObject","indexOf","setTimeout","catch","error","personToUpdate","find","objectSpread","p","components_Persons","personToRemove","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7cd75d0f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({persons, deleteFunction}) => {\n  const removeConfirmation = (person, deleteFunction) => {\n     if (window.confirm(`Delete ${person.name}?`)) {\n     \tdeleteFunction(person.id)\n     }\n  }\n  const rows = () => persons.map((person) => <div key={person.name}>{person.name} {person.number}\n  \t<button onClick={() => removeConfirmation(person, deleteFunction)}>delete</button></div>)\n  return (\n    <>\n      {rows()}\n    </>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({value, changeFunction}) => {\n  return (\n  <div>filter shown with <input value={value} onChange={changeFunction}></input></div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, newNumber, handleNameChange, handleNumberChange }) =>\n\n<form onSubmit={addPerson}>\n<div>\n  name: <input value={newName} onChange={handleNameChange}/>\n</div>\n<div>\n  number: <input value={newNumber} onChange={handleNumberChange}/>\n</div>\n<div>\n  <button type=\"submit\">add</button>\n</div>\n</form>\n\nexport default PersonForm\n\n","import React from 'react'\n\nconst Notification = ({ message, className }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={className}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n\treturn axios.get(baseUrl)\n}\n\nconst create = newObject => {\n\treturn axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n\treturn axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n\treturn axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default{ getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport contactService from './services/contacts'\n\nconst App = () => {\n  const [ persons, setPersons] =  useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.map(person => person.name).indexOf(newName) === -1) {\n      contactService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setMessage(`Successfully added ${newName}`)\n          setMessageType('success')\n          setTimeout(() => {\n            setMessage(null)\n            setMessageType(null)\n        }, 2000)\n        })\n        .catch(error => {\n          setMessage(error.response.data.error)\n          setMessageType('error')\n          setTimeout(() =>{\n            setMessage(null)\n            setMessageType(null)\n          }, 2000)\n        })\n    } else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const personToUpdate = persons.find(person => person.name === newName)\n        contactService\n          .update(personToUpdate.id, { ...personToUpdate, number: newNumber})\n          .then(response => {\n            setPersons(persons.map(person => person.id !== personToUpdate.id ? person : response.data))\n            setMessage(`Successfully updated ${newName}'s number`)\n            setMessageType('success')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType(null)\n            }, 2000)\n          })\n          .catch(error => {\n            if (error.response.data.error === \"Validation failed: name: Cannot read property 'ownerDocument' of null\") {\n              setMessage(`Information of ${newName} has already been removed from server`)\n              setPersons(persons.filter(p => p.id !== personToUpdate.id))\n            } else {\n              setMessage(error.response.data.error)\n            }\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType(null)\n            }, 2000)\n          })\n      }\n    }\n\n    \n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const removePerson = id => {\n    const personToRemove = persons.find(p => p.id === id)\n    contactService.remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessage(`Successfully removed ${personToRemove.name}`)\n        setMessageType('success')\n        setTimeout(() => {\n        setMessage(null)\n        setMessageType(null)\n        }, 2000)\n      })\n      .catch(error => {\n         setMessage(`Information of ${personToRemove.name} has already been removed from server`)\n         setPersons(persons.filter(p => p.id !== personToRemove.id))\n         setMessageType('error')\n         setTimeout(() => {\n           setMessage(null)\n           setMessageType(null)\n            }, 2000)\n          })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} className={messageType} />\n      <Filter value={filter} changeFunction={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName}\n      newNumber={newNumber} handleNameChange={handleNameChange}\n      handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deleteFunction={removePerson}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}